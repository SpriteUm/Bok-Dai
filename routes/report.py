from flask import Blueprint, render_template, redirect, url_for, flash
from flask_login import current_user, login_required
from flask_wtf import FlaskForm
from wtforms import StringField, SubmitField, SelectField, TextAreaField
from wtforms.validators import DataRequired
from wtforms.fields import FloatField, DateField
from models.issue import Issue
from models import db

class ReportForm(FlaskForm):
    category = SelectField('‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠', choices=[
        ('', '-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà --'),
        ('‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å', '‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å'),
        ('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î'),
        ('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢'),
        ('‡πÑ‡∏ü‡∏ü‡πâ‡∏≤', '‡πÑ‡∏ü‡∏ü‡πâ‡∏≤'),
        ('‡∏≠‡∏∑‡πà‡∏ô‡πÜ', '‡∏≠‡∏∑‡πà‡∏ô‡πÜ')
    ], validators=[DataRequired()])
    detail = TextAreaField('‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î', validators=[DataRequired()])
    date_reported = DateField('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏', format='%Y-%m-%d', validators=[DataRequired()])
    location_text = StringField('‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà', validators=[DataRequired()])
    urgency = SelectField('‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô', choices=[
        ('üî¥', '‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î'), ('üü†', '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á'), ('üü¢', '‡∏ï‡πà‡∏≥')
    ], validators=[DataRequired()])
    lat = FloatField('Latitude')
    lng = FloatField('Longitude')
    submit = SubmitField('‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô')

report_bp = Blueprint('report', __name__)

@report_bp.route('/report', methods=['GET', 'POST'])
@login_required
def report():
    form = ReportForm()
    if form.validate_on_submit():
        try:
            issue = Issue(
                category=form.category.data,
                detail=form.detail.data,
                date_reported=form.date_reported.data,
                location_text=form.location_text.data,
                urgency=form.urgency.data,
                lat=form.lat.data if form.lat.data else None,
                lng=form.lng.data if form.lng.data else None,
                user_id=current_user.id
            )
            db.session.add(issue)
            db.session.commit()
            flash("‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", "success")
            return redirect(url_for('indexuser'))
        except Exception as e:
            db.session.rollback()
            flash("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: " + str(e), "error")
    return render_template('report.html', form=form)
