import os
from flask import Blueprint, render_template, redirect, url_for, flash, request, current_app
from flask_login import login_required
from flask_wtf import FlaskForm
from wtforms import StringField, SelectField, TextAreaField, SubmitField, DateField
from wtforms.validators import DataRequired
from werkzeug.utils import secure_filename
from datetime import datetime
from models.report_model import db, Report

report_bp = Blueprint('report', __name__, template_folder='../templates')

UPLOAD_FOLDER = 'static/uploads'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

class ReportForm(FlaskForm):
    category = SelectField('‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠', choices=[
        ('', '-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà --'),
        ('‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å', '‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏≥‡∏ô‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏î‡∏ß‡∏Å'),
        ('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î'),
        ('‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢', '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢'),
        ('‡πÑ‡∏ü‡∏ü‡πâ‡∏≤', '‡πÑ‡∏ü‡∏ü‡πâ‡∏≤'),
        ('‡∏≠‡∏∑‡πà‡∏ô‡πÜ', '‡∏≠‡∏∑‡πà‡∏ô‡πÜ')
    ], validators=[DataRequired()])
    other_text = StringField('‡∏≠‡∏∑‡πà‡∏ô‡πÜ')
    detail = TextAreaField('‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î', validators=[DataRequired()])
    date_reported = DateField('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏´‡∏ï‡∏∏', format='%Y-%m-%d', validators=[DataRequired()])
    location_text = StringField('‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà', validators=[DataRequired()])
    urgency = SelectField('‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô', choices=[
        ('üî¥', '‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î'), ('üü†', '‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á'), ('üü¢', '‡∏ï‡πà‡∏≥')
    ], validators=[DataRequired()])
    lat = StringField('‡∏•‡∏∞‡∏ï‡∏¥‡∏à‡∏π‡∏î')
    lng = StringField('‡∏•‡∏≠‡∏á‡∏à‡∏¥‡∏à‡∏π‡∏î')
    submit = SubmitField('‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô')

@report_bp.route('/', methods=['GET','POST'])
@login_required
def report():
    form = ReportForm()
    if form.validate_on_submit():
        # ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏π‡∏õ
        filenames = []
        files = request.files.getlist('images[]')
        for f in files:
            if f.filename:
                fname = secure_filename(f.filename)
                f.save(os.path.join(UPLOAD_FOLDER, fname))
                filenames.append(fname)

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á database
        new_report = Report(
            category=form.category.data,
            other_text=form.other_text.data,
            detail=form.detail.data,
            date_reported=form.date_reported.data,
            location_text=form.location_text.data,
            urgency=form.urgency.data,
            lat=float(form.lat.data) if form.lat.data else None,
            lng=float(form.lng.data) if form.lng.data else None,
            image_filenames=",".join(filenames)
        )
        db.session.add(new_report)
        db.session.commit()

        flash("‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!", "success")
        return redirect(url_for('report.report'))

    return render_template('report.html', form=form)
